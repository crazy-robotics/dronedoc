# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2018, Takaki Ueno
# This file is distributed under the same license as the Dronedoc package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2020.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Dronedoc \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-12-30 19:39+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"

#: ../../dronedoc/source/moveit/drive_drone/controller.rst:2
msgid "コード解説（コントローラ)"
msgstr ""

#: ../../dronedoc/source/moveit/drive_drone/controller.rst:4
msgid "drone_controller.cpp"
msgstr ""

#: ../../dronedoc/source/moveit/drive_drone/controller.rst:31
msgid ""
"必要なヘッダファイルをインクルードします。 "
"コントローラ内でアクションサーバを実装するので、actionlibのヘッダファイルもインクルードしています。"
msgstr ""

#: ../../dronedoc/source/moveit/drive_drone/controller.rst:45
msgid ""
"アクションサーバとサーバ名、サーバが使用するフィードバックとリザルトのメッセージを初期化します。 "
"FollowMultiDOFJointTrajectoryインターフェースは、`ExecuteTrajectory "
"<http://docs.ros.org/api/moveit_msgs/html/action/ExecuteTrajectory.html>`_"
" アクションを使用するので、アクションサーバを宣言する際のテンプレート引数として与えています。"
msgstr ""

#: ../../dronedoc/source/moveit/drive_drone/controller.rst:53
msgid "位置指令を送信するためのパブリッシャです。"
msgstr ""

#: ../../dronedoc/source/moveit/drive_drone/controller.rst:66
msgid "ドローンの現在位置と状態を取得するためのパブリッシャとそれを格納するための変数です。"
msgstr ""

#: ../../dronedoc/source/moveit/drive_drone/controller.rst:95
msgid "``DroneController`` クラスのコンストラクタです。 内部ではパブリッシャとサブスクライバ、アクションサーバの初期化を行っています。"
msgstr ""

#: ../../dronedoc/source/moveit/drive_drone/controller.rst:98
msgid ""
"使用するトピック名は、ROSの `パラメータサーバから取得 "
"<http://wiki.ros.org/roscpp/Overview/Parameter%20Server>`_ します。"
msgstr ""

#: ../../dronedoc/source/moveit/drive_drone/controller.rst:100
msgid ""
"サブスクライバとアクションサーバはコールバック関数を使用するので、メソッドをコールバック関数に指定するためにboost::functionオブジェクトを受け取る"
" `関数 "
"<http://docs.ros.org/jade/api/roscpp/html/classros_1_1NodeHandle.html#a93b0fe95db250c45fdfbc5fd9f4c0159>`_"
" と、`コンストラクタ "
"<http://docs.ros.org/melodic/api/actionlib/html/classactionlib_1_1SimpleActionServer.html#a0f047d3a7474d3c2c1d3a0c7ef6adf16>`_"
" をそれぞれ使用して初期化しています。"
msgstr ""

#: ../../dronedoc/source/moveit/drive_drone/controller.rst:106
msgid "アクションのコールバック関数です。 アクションゴールが届いたタイミングで実行されます。"
msgstr ""

#: ../../dronedoc/source/moveit/drive_drone/controller.rst:114
msgid ""
"アクションゴールは、`moveit_msgs/RobotTrajectory "
"<http://docs.ros.org/melodic/api/moveit_msgs/html/msg/RobotTrajectory.html>`_"
" 型のメッセージなので、そこから経由点の配列を取り出しています。"
msgstr ""

#: ../../dronedoc/source/moveit/drive_drone/controller.rst:126
msgid "ドローンに接続するまで待機します。"
msgstr ""

#: ../../dronedoc/source/moveit/drive_drone/controller.rst:135
msgid ""
"OFFBOARDモードに変更するためには予め ``setpoint_position/local`` "
"トピックにメッセージがパブリッシュされている必要があるので、予めパブリッシュしておきます。"
msgstr ""

#: ../../dronedoc/source/moveit/drive_drone/controller.rst:143
msgid "各経由点を処理していきます。"
msgstr ""

#: ../../dronedoc/source/moveit/drive_drone/controller.rst:150
msgid "現在処理している経由点の番号をアクションのフィードバックとして登録します。"
msgstr ""

#: ../../dronedoc/source/moveit/drive_drone/controller.rst:157
msgid ""
"``trajectory_msgs/MultiDOFJointTrajectoryPoint`` "
"メッセージを、``geometry_msgs/PoseStamped`` メッセージに変換します。"
msgstr ""

#: ../../dronedoc/source/moveit/drive_drone/controller.rst:163
msgid ""
"`バイリニア補間 <https://en.wikipedia.org/wiki/Bilinear_interpolation>`_ "
"を行って経由点間の点の配列を取得します。"
msgstr ""

#: ../../dronedoc/source/moveit/drive_drone/controller.rst:169
msgid "取得した配列の各点について処理を行います。"
msgstr ""

#: ../../dronedoc/source/moveit/drive_drone/controller.rst:179
msgid "ドローンが次の点に到達するか、アクションを中止するリクエストが届くまで目標位置を送信し続けます。"
msgstr ""

#: ../../dronedoc/source/moveit/drive_drone/controller.rst:191
msgid "アクションの中止がリクエストされた時には、状態を反映してアクションサーバを終了します。"
msgstr ""

#: ../../dronedoc/source/moveit/drive_drone/controller.rst:199
msgid "ゴールまで移動したので結果を反映してクライアントへと送信します。"
msgstr ""

#: ../../dronedoc/source/moveit/drive_drone/controller.rst:245
msgid ""
"``geometry_msgs/PoseStamped`` "
"型で表されたスタート地点とゴール地点の座標を受け取って、バイリニア補間を行い、補間された点の配列を返す関数です。"
msgstr ""

#: ../../dronedoc/source/moveit/drive_drone/controller.rst:290
msgid "二点の二次元座標を受け取って線形補間を行い、補間された点の座標の配列を返す関数です。"
msgstr ""

#: ../../dronedoc/source/moveit/drive_drone/controller.rst:307
msgid ""
"``trajectory_msgs/MultiDOFJointTrajectoryPoint`` メッセージを "
"``geometry_msgs/PoseStamped`` メッセージへ変更して返す関数です。"
msgstr ""

#: ../../dronedoc/source/moveit/drive_drone/controller.rst:319
msgid ""
"ドローンが目標位置に到達したかどうかを判断する関数です。 デフォルトでは、目標位置を中心とした0.1 "
"m以内の球体内にドローンが存在する場合に目標位置へ到達したと判定します。"
msgstr ""

#: ../../dronedoc/source/moveit/drive_drone/controller.rst:334
msgid "ドローンの位置と状態のコールバック関数です。 それぞれメンバ変数に取得したメッセージを格納しています。"
msgstr ""

#: ../../dronedoc/source/moveit/drive_drone/controller.rst:349
msgid ""
"``drone_controller`` ノード内でコントローラを初期化します。 "
"FollowMultiDOFJointTrajectoryインターフェースが利用するメッセージは、``iris_group_controller/follow_multi_dof_joint_trajectory``"
" 以下でやりとりされるので、これをコントローラのコンストラクタへ与えます。"
msgstr ""

