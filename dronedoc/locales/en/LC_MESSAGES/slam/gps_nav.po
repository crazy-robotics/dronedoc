# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2018, Takaki Ueno
# This file is distributed under the same license as the Dronedoc package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2020.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Dronedoc \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-12-30 19:39+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"

#: ../../dronedoc/source/slam/gps_nav.rst:4
msgid "GPSを用いた自律飛行"
msgstr ""

#: ../../dronedoc/source/slam/gps_nav.rst:5
msgid ""
"このページの内容は `Setup and Configuration of the Navigation Stack on a Robot "
"<http://wiki.ros.org/navigation/Tutorials/RobotSetup>`_ を参考にしています。"
msgstr ""

#: ../../dronedoc/source/slam/gps_nav.rst:7
msgid "以下の赤枠内の部分が経路計画と障害物回避に必要な部分です。 経路計画と障害物回避を含む自律飛行を行うためには、"
msgstr ""

#: ../../dronedoc/source/slam/gps_nav.rst:10
msgid "ロボットのベースフレーム( ``base_link`` など)と使用するセンサのフレームの間のTFがブロードキャストされていること"
msgstr ""

#: ../../dronedoc/source/slam/gps_nav.rst:11
msgid "センサデータがパブリッシュされていること"
msgstr ""

#: ../../dronedoc/source/slam/gps_nav.rst:12
msgid "オドメトリ情報がTFとnav_msgs/Odometryメッセージでパブリッシュされていること"
msgstr ""

#: ../../dronedoc/source/slam/gps_nav.rst:13
msgid "geometry_msgs/Twistメッセージを使ってロボットを操作できること"
msgstr ""

#: ../../dronedoc/source/slam/gps_nav.rst:15
msgid "が必要です。 以降ではそれぞれの設定について見ていきます。"
msgstr ""

#: ../../dronedoc/source/slam/gps_nav.rst:20
msgid ""
"From `ROS Wiki <http://wiki.ros.org/navigation/Tutorials/RobotSetup>`_ "
"(`CC BY 3.0 <https://creativecommons.org/licenses/by/3.0/>`_)"
msgstr ""

#: ../../dronedoc/source/slam/gps_nav.rst:23
msgid "TF"
msgstr ""

#: ../../dronedoc/source/slam/gps_nav.rst:24
msgid ""
"今回はLiDARを使用するので、LiDARとロボットの位置関係がわかるように、ロボットのベースフレームからLiDARのフレームへのTFを定義してあげる必要があります。"
" 今回はロボットのベースフレームは ``base_link`` 、LiDARのフレームは ``lidar_link`` となっています。 "
"自分のロボットの設定をモデルなどを参照して確認して、必要な場合は適宜変更してください。"
msgstr ""

#: ../../dronedoc/source/slam/gps_nav.rst:28
msgid ""
"静的なTFをパブリッシュするにはtfパッケージの `static_transform_publisher "
"<http://wiki.ros.org/tf#static_transform_publisher>`_ を使います。 "
"そのために、mymodel_sitl.launchをコピーして新しくmymodel_sitl_tf.launchというファイルを作って、以下の内容を追加してください。"
msgstr ""

#: ../../dronedoc/source/slam/gps_nav.rst:37
msgid "センサ情報"
msgstr ""

#: ../../dronedoc/source/slam/gps_nav.rst:38
msgid ""
"今回は障害物の検出に2D LiDARを使います。 ``models/iris_2d_lidar/model.sdf`` "
"内でLiDARの設定を以下のようにしたので、 LiDARの点群データは ``/laser/scan`` トピックにパブリッシュされます。"
msgstr ""

#: ../../dronedoc/source/slam/gps_nav.rst:49
msgid ""
"また、LiDARの設置してあるフレームは ``lidar_link`` です。 このフレームは ``base_link`` "
"フレームの子要素になっています。 つまり、 ``base_link`` → ``lidar_link`` のようにTFがパブリッシュされています。"
msgstr ""

#: ../../dronedoc/source/slam/gps_nav.rst:54
msgid "オドメトリ情報"
msgstr ""

#: ../../dronedoc/source/slam/gps_nav.rst:56
msgid "TFをパブリッシュする"
msgstr ""

#: ../../dronedoc/source/slam/gps_nav.rst:57
msgid ""
"move_baseでは、障害物回避と経路計画のためにグローバルとローカルの２つのコストマップを使っています。 今回の設定ではローカルコストマップは"
" ``odom`` フレームを参照し、グローバルコストマップは ``map`` フレームを参照するようになっているので、それぞれのフレームからの "
"``base_link`` へのTFを定義する必要があります。"
msgstr ""

#: ../../dronedoc/source/slam/gps_nav.rst:60
msgid ""
"``odom`` フレームは一般的にロボットのローカルフレームとして使用され、 ``map`` "
"フレームは一般的にグローバルフレームとして使用されます。 今回もその慣習に従って、ローカルフレームのTFを ``odom`` "
"フレーム内で、グローバルフレームのTFを ``map`` フレーム内でブロードキャストすることにします。"
msgstr ""

#: ../../dronedoc/source/slam/gps_nav.rst:63
msgid ""
"フレームについての詳細は `REP105 -- Coordinate Frames for Mobile Platforms "
"<http://www.ros.org/reps/rep-0105.html>`_ に記述されています。"
msgstr ""

#: ../../dronedoc/source/slam/gps_nav.rst:67
msgid ""
"From `ROS Wiki "
"<http://wiki.ros.org/hector_slam/Tutorials/SettingUpForYourRobot>`_ (`CC "
"BY 3.0 <https://creativecommons.org/licenses/by/3.0/>`_)"
msgstr ""

#: ../../dronedoc/source/slam/gps_nav.rst:70
msgid "odom->base_link"
msgstr ""

#: ../../dronedoc/source/slam/gps_nav.rst:71
msgid ""
"機体のTFはmavrosを使ってパブリッシュすることができます。 "
"しかし、mavros_posix_sitl.launchを使った場合は、デフォルトではTFがパブリッシュされません。"
msgstr ""

#: ../../dronedoc/source/slam/gps_nav.rst:74
msgid ""
"TFがパブリッシュされるようにするには、 ``/mavros/local_position/tf/send`` パラメータの値を ``true``"
" にする必要があります。"
msgstr ""

#: ../../dronedoc/source/slam/gps_nav.rst:76
msgid ""
"また、以降でmove_baseを使うための設定として、 ``/mavros/local_position/tf/frame_id`` と、 "
"``/mavros/local_position/tf/frame_id`` のパラメータの値を ``odom`` にしておきます。"
msgstr ""

#: ../../dronedoc/source/slam/gps_nav.rst:78
msgid "以下の内容をmymodel_sitl_tf.launchの最後に追加してください。"
msgstr ""

#: ../../dronedoc/source/slam/gps_nav.rst:87
msgid "map->odom"
msgstr ""

#: ../../dronedoc/source/slam/gps_nav.rst:88
msgid ""
"本来、 ``odom`` フレームからのTFはホイールオドメトリなどを用いて計算し、 ``map`` "
"フレームからのTFはGPSやLiDARなどのセンサ情報を用いて更新されるのですが、今回はどちらもGPSを用いている上に基点も同じなので、次のようにして"
" ``map`` から ``odom`` へのTFをブロードキャストすることにします。 "
"以下の内容をmymodel_sitl_tf.launchに追加してください。"
msgstr ""

#: ../../dronedoc/source/slam/gps_nav.rst:96
msgid "最終的には、 ``map`` から ``lidar_link`` までのTFは下図のようになります。"
msgstr ""

#: ../../dronedoc/source/slam/gps_nav.rst:100
msgid ""
"今回は ``odom`` フレームと ``map`` フレームについて解説するために ``map`` から ``odom`` "
"へのTFを無理やりブロードキャストしていますが、どちらかのフレームしか利用できない場合は、片方のフレームだけでも問題ありません。"
msgstr ""

#: ../../dronedoc/source/slam/gps_nav.rst:103
msgid "nav_msgs/Odometryをパブリッシュする"
msgstr ""

#: ../../dronedoc/source/slam/gps_nav.rst:104
msgid "nav_msgs/Odometryメッセージがパブリッシュされるトピックはmavrosには用意されていないので、自分で用意する必要があります。"
msgstr ""

#: ../../dronedoc/source/slam/gps_nav.rst:106
msgid ""
"`ROS Wikiのチュートリアル "
"<http://wiki.ros.org/navigation/Tutorials/RobotSetup/Odom>`_ "
"を参考にしてノードを作成しましょう。"
msgstr ""

#: ../../dronedoc/source/slam/gps_nav.rst:108
msgid ""
"``map`` から ``base_link`` へのTFはすでにパブリッシュされているので、今回は ``nav_msgs::Odometry``"
" メッセージのパブリッシャを書くだけで構いません。"
msgstr ""

#: ../../dronedoc/source/slam/gps_nav.rst:110
msgid "Pythonのコード例は、:doc:`odom_pub_py` を参考にしてください。"
msgstr ""

#: ../../dronedoc/source/slam/gps_nav.rst:112
msgid "odom_publisher.cpp"
msgstr ""

#: ../../dronedoc/source/slam/gps_nav.rst:118
msgid "コード解説"
msgstr ""

#: ../../dronedoc/source/slam/gps_nav.rst:129
msgid ""
"使用するメッセージを使うのに必要なヘッダファイルをインクルードしています。 ``tf/transform_datatypes.h`` は、 "
"``createQuaternionFromYaw`` 関数を使用するために必要です。"
msgstr ""

#: ../../dronedoc/source/slam/gps_nav.rst:136
msgid "``nav_msgs/Odometry`` メッセージのパブリッシャです。"
msgstr ""

#: ../../dronedoc/source/slam/gps_nav.rst:143
msgid "``nav_msgs/Odometry`` メッセージのフィールドで使われる位置と速度のサブスクライバです。"
msgstr ""

#: ../../dronedoc/source/slam/gps_nav.rst:159
msgid "それぞれのサブスクライバのコールバック関数です。 グローバル変数にメッセージを格納するだけのシンプルなものです。"
msgstr ""

#: ../../dronedoc/source/slam/gps_nav.rst:169
msgid "z軸周りの回転（Yaw）からTFのクォータニオンを生成して、それをROSメッセージに変換しています。"
msgstr ""

#: ../../dronedoc/source/slam/gps_nav.rst:189
msgid ""
"``nav_msgs/Odometry`` メッセージの各フィールドを埋めてパブリッシュしています。 ``nav_msgs/Odometry`` "
"メッセージのフィールドについては、 `nav_msgs/Odometry Message "
"<http://docs.ros.org/melodic/api/nav_msgs/html/msg/Odometry.html>`_ "
"を見てください。"
msgstr ""

#: ../../dronedoc/source/slam/gps_nav.rst:193
msgid "速度指令"
msgstr ""

#: ../../dronedoc/source/slam/gps_nav.rst:195
msgid "cmd_velトピック"
msgstr ""

#: ../../dronedoc/source/slam/gps_nav.rst:196
msgid ""
"mavrosを使えば、 ``/mavros/setpoint_velocity/cmd_vel_unstamped`` トピックもしくは、 "
"``/mavros/setpoint_velocity/cmd_vel`` トピックに速度指令を送信することでドローンを移動させることができます。"
" これらのトピックはメッセージの型によって分けられており、 ``cmd_vel_unstamped`` は ``Twist`` 型、 "
"``cmd_vel`` は ``TwistStamped`` 型のメッセージを使います。 move_baseは ``Twist`` "
"型のメッセージをパブリッシュするので、今回は ``/mavros/setpoint_velocity/cmd_vel_unstamped`` "
"トピックを利用します。"
msgstr ""

#: ../../dronedoc/source/slam/gps_nav.rst:200
msgid ""
"また、move_baseは ``/cmd_vel`` トピックに速度指令をパブリッシュするようになっているので、Launchファイル内で次のように"
" `リマップ <http://wiki.ros.org/roslaunch/XML/remap>`_ "
"することでmove_baseからの速度指令がドローンに送られるようにします。"
msgstr ""

#: ../../dronedoc/source/slam/gps_nav.rst:202
msgid "Launchファイルについては、後述の :ref:`navigation_launch` の項を参照してください。"
msgstr ""

#: ../../dronedoc/source/slam/gps_nav.rst:209
msgid "mav_frameパラメータ"
msgstr ""

#: ../../dronedoc/source/slam/gps_nav.rst:210
msgid ""
"``cmd_vel`` トピックもしくは、 ``cmd_vel_unstamped`` "
"トピックを使う場合の速度指令は、デフォルトではドローンのベースフレームではなく、ドローンの位置の基準となるフレーム（ ``odom`` や "
"``map`` など）を基準とした速度を使用しています。"
msgstr ""

#: ../../dronedoc/source/slam/gps_nav.rst:212
msgid "以下の画像のように、速度指令の基準となるフレームが異なる場合には、同じ値の速度指令値を入力しても、ロボットの速度（太い矢印）は異なります。"
msgstr ""

#: ../../dronedoc/source/slam/gps_nav.rst:216
msgid ""
"move_baseがパブリッシュする速度指令は、ロボットのベースフレームを基準としたものです。 "
"そのため、今回は速度指令の基準となるフレームをロボットのベースフレームに設定しなければなりません。"
msgstr ""

#: ../../dronedoc/source/slam/gps_nav.rst:219
msgid ""
"``cmd_vel`` トピックによる速度指令が基準とするフレームを変更するには、 "
"``/mavros/setpoint_velocity/mav_frame`` パラメータの設定を変える必要があります。 "
"ドローンのベースフレームを基準にする場合は、このパラメータの値を ``BODY_NED`` に変更します。 デフォルトでは "
"``LOCAL_NED`` になっています。"
msgstr ""

#: ../../dronedoc/source/slam/gps_nav.rst:223
msgid "以下の内容をmymodel_sitl_tf.launchに追加することで、このパラメータの値を変更できます。"
msgstr ""

#: ../../dronedoc/source/slam/gps_nav.rst:229
msgid ""
"他の利用可能なフレームについては `mavros/Enumerations "
"<http://wiki.ros.org/mavros/Enumerations>`_ にリストがあります。"
msgstr ""

#: ../../dronedoc/source/slam/gps_nav.rst:232
msgid "設定ファイルを書く"
msgstr ""

#: ../../dronedoc/source/slam/gps_nav.rst:234
msgid "大域的経路計画と局所的経路計画"
msgstr ""

#: ../../dronedoc/source/slam/gps_nav.rst:235
#, python-format
msgid ""
"コストマップは事前に与えられた地図情報やセンサから得られた障害物の情報をもとに構築される地図で、経路計画に用いられます。（ `参考 "
"<https://qiita.com/MoriKen/items/d5cd6208143d6c40caff#%E5%A4%A7%E5%9F%9F%E3%81%A8%E5%B1%80%E6%89%80%E3%81%AE%E6%AF%94%E8%BC%83>`_"
" ）"
msgstr ""

#: ../../dronedoc/source/slam/gps_nav.rst:237
msgid "大域的経路計画では、スタートからゴールまでの経路を計画します。 大域的経路計画においては、グローバル（大域的）コストマップが使われます。"
msgstr ""

#: ../../dronedoc/source/slam/gps_nav.rst:240
msgid "局所的経路計画では、障害物回避のための経路を計画します。 局所的経路計画を行うために、ローカル（局所的）コストマップが使用されます。"
msgstr ""

#: ../../dronedoc/source/slam/gps_nav.rst:243
msgid ""
"大域的経路計画を行う経路計画手法のことをグローバルプランナー、局所的経路計画を行う手法のことをローカルプランナーといいます。 "
"グローバルプランナーにはダイクストラ法やA*法が、ローカルプランナーにはDynamic Window Approach（DWA）などがあります。"
msgstr ""

#: ../../dronedoc/source/slam/gps_nav.rst:247
msgid "コストマップの設定"
msgstr ""

#: ../../dronedoc/source/slam/gps_nav.rst:248
msgid ""
"コストマップの設定はyamlファイルに記述します。 "
"共通の設定、大域的コストマップの設定、局所的コストマップの設定用の3つの設定ファイルを以下のように準備します。"
msgstr ""

#: ../../dronedoc/source/slam/gps_nav.rst:251
msgid ""
"コストマップのパラメータの設定はグローバルプランナーやローカルプランナーが生成する経路にも影響を与えます。 "
"生成されるグローバルパスやローカルパスが満足の行くものでない場合には、コストマップのパラメータを変更することも検討するとよいかもしれません。"
msgstr ""

#: ../../dronedoc/source/slam/gps_nav.rst:254
msgid ""
"以下の設定は必要最小限のものです。 他の設定やコストマップの詳細については `costmap_2dのROS Wikiページ "
"<http://wiki.ros.org/costmap_2d>`_ を見てください。"
msgstr ""

#: ../../dronedoc/source/slam/gps_nav.rst:258
msgid "共通設定"
msgstr ""

#: ../../dronedoc/source/slam/gps_nav.rst:259
msgid "costmap_common_params.yaml"
msgstr ""

#: ../../dronedoc/source/slam/gps_nav.rst:264
msgid "それぞれのパラメータの意味は以下のとおりです。"
msgstr ""

#: ../../dronedoc/source/slam/gps_nav.rst:267
msgid "``obstacle_range``"
msgstr ""

#: ../../dronedoc/source/slam/gps_nav.rst:267
msgid "コストマップに反映する障害物の距離。 この例では3.0 mより近くにある障害物がコストマップに反映されます。"
msgstr ""

#: ../../dronedoc/source/slam/gps_nav.rst:269
msgid "``raytrace_range``"
msgstr ""

#: ../../dronedoc/source/slam/gps_nav.rst:270
msgid "センサデータがこの数値以上の場合には、ロボットからこの数値の距離までの間に障害物はないと判断します。"
msgstr ""

#: ../../dronedoc/source/slam/gps_nav.rst:272
msgid "``footprint``"
msgstr ""

#: ../../dronedoc/source/slam/gps_nav.rst:272
msgid ""
"ロボットの形状を多角形で指定します。中心は ``(0.0, 0.0)`` です。 ロボットの外形が円である場合には、 "
"``robot_radius`` パラメータを使います。"
msgstr ""

#: ../../dronedoc/source/slam/gps_nav.rst:274
msgid "``inflation_radius``"
msgstr ""

#: ../../dronedoc/source/slam/gps_nav.rst:275
msgid "このパラメータで指定された値の距離よりも障害物に近いグリッドには、コストが付与されます。"
msgstr ""

#: ../../dronedoc/source/slam/gps_nav.rst:276
msgid "``observation_sources``"
msgstr ""

#: ../../dronedoc/source/slam/gps_nav.rst:277
msgid "コストマップに渡される情報を得るセンサを設定します。"
msgstr ""

#: ../../dronedoc/source/slam/gps_nav.rst:278
msgid "``sensor_frame``"
msgstr ""

#: ../../dronedoc/source/slam/gps_nav.rst:279
msgid "センサーの座標系（フレーム）です。"
msgstr ""

#: ../../dronedoc/source/slam/gps_nav.rst:280
msgid "``data_type``"
msgstr ""

#: ../../dronedoc/source/slam/gps_nav.rst:281
msgid "トピックにパブリッシュされているメッセージの型（今回は ``sensor_msgs/LaserScan`` ）です。"
msgstr ""

#: ../../dronedoc/source/slam/gps_nav.rst:282
msgid "``topic``"
msgstr ""

#: ../../dronedoc/source/slam/gps_nav.rst:283
msgid "センサデータがパブリッシュされているトピックです。"
msgstr ""

#: ../../dronedoc/source/slam/gps_nav.rst:284
msgid "``marking``"
msgstr ""

#: ../../dronedoc/source/slam/gps_nav.rst:285
msgid "``true`` の場合には、障害物をコストマップに追加する際にこのセンサの情報が使用されます。"
msgstr ""

#: ../../dronedoc/source/slam/gps_nav.rst:287
msgid "``clearing``"
msgstr ""

#: ../../dronedoc/source/slam/gps_nav.rst:287
msgid "``true`` の場合には、障害物をコストマップから除去する際にこのセンサの情報が使用されます。"
msgstr ""

#: ../../dronedoc/source/slam/gps_nav.rst:290
msgid "大域的コストマップの設定"
msgstr ""

#: ../../dronedoc/source/slam/gps_nav.rst:291
msgid "global_costmap_params.yaml"
msgstr ""

#: ../../dronedoc/source/slam/gps_nav.rst:296
msgid "``global_frame``"
msgstr ""

#: ../../dronedoc/source/slam/gps_nav.rst:297
msgid ""
"大域的コストマップの座標系（フレーム）を設定します。先述したように、 ``odom`` フレームからのTFしか得られない場合はここを "
"``odom`` にしても構いません。"
msgstr ""

#: ../../dronedoc/source/slam/gps_nav.rst:298
msgid "``robot_base_frame``"
msgstr ""

#: ../../dronedoc/source/slam/gps_nav.rst:299
msgid "（コストマップが参照する）ロボットのベース座標系（フレーム）を設定します"
msgstr ""

#: ../../dronedoc/source/slam/gps_nav.rst:300
msgid "``update_frequency``"
msgstr ""

#: ../../dronedoc/source/slam/gps_nav.rst:301
msgid "コストマップの更新周期（Hz）を定義します"
msgstr ""

#: ../../dronedoc/source/slam/gps_nav.rst:303
msgid "``static_map``"
msgstr ""

#: ../../dronedoc/source/slam/gps_nav.rst:303
msgid ""
"``true`` にすると、既存のマップもしくはmap_severから提供されるマップを使ってコストマップを初期化されます。 "
"マップを使わずに初期化する際には ``false`` にします。"
msgstr ""

#: ../../dronedoc/source/slam/gps_nav.rst:305
msgid "``rolling_window``"
msgstr ""

#: ../../dronedoc/source/slam/gps_nav.rst:306
msgid ""
"``true`` にすると、ロボットが移動しても局所的コストマップの中心がロボットに追従するようになります。 ``static_map`` "
"パラメータをfalseにした際には ``true`` にする必要があります。"
msgstr ""

#: ../../dronedoc/source/slam/gps_nav.rst:307
msgid "``width``"
msgstr ""

#: ../../dronedoc/source/slam/gps_nav.rst:308
msgid "コストマップの幅（m）"
msgstr ""

#: ../../dronedoc/source/slam/gps_nav.rst:309
msgid "``height``"
msgstr ""

#: ../../dronedoc/source/slam/gps_nav.rst:310
msgid "コストマップの高さ（m）"
msgstr ""

#: ../../dronedoc/source/slam/gps_nav.rst:312
msgid "``resolution``"
msgstr ""

#: ../../dronedoc/source/slam/gps_nav.rst:312
msgid "コストマップの解像度（cell/m）"
msgstr ""

#: ../../dronedoc/source/slam/gps_nav.rst:315
msgid "局所的コストマップの設定"
msgstr ""

#: ../../dronedoc/source/slam/gps_nav.rst:316
msgid "local_costmap_params.yaml"
msgstr ""

#: ../../dronedoc/source/slam/gps_nav.rst:321
msgid "ほとんどの内容は大域的コストマップの設定と同じです。"
msgstr ""

#: ../../dronedoc/source/slam/gps_nav.rst:324
msgid "``publish_frequency``"
msgstr ""

#: ../../dronedoc/source/slam/gps_nav.rst:324
msgid "コストマップを表示するためのデータをパブリッシュする周波数（Hz）です"
msgstr ""

#: ../../dronedoc/source/slam/gps_nav.rst:327
msgid "ローカルプランナーの設定"
msgstr ""

#: ../../dronedoc/source/slam/gps_nav.rst:328
msgid ""
"ロボットのベースに与える速度指令を計算するためにローカルプランナーを使用します。 パラメータの詳細やローカルプランナーの概要については "
"`base_local_plannerのROS Wikiページ "
"<http://wiki.ros.org/base_local_planner>`_ を見てください。"
msgstr ""

#: ../../dronedoc/source/slam/gps_nav.rst:331
msgid "以下の設定ファイルではロボットの速度と加速度の最大値、最小値等を定義しています。"
msgstr ""

#: ../../dronedoc/source/slam/gps_nav.rst:333
msgid ""
"``holonomic_robot`` パラメータはロボットがホロノミックかどうかを定義します。 "
"ロボットの制御可能な自由度が全体の自由度と等しい場合にはホロノミックであるといい、そうでない場合はノンホロノミック（もしくは非ホロノミック）であるといいます。"
" 例えば、自動車は全体の自由度が3（x, y, yaw）ですが、制御可能な自由度は2（x, "
"yaw）であり、ノンホロノミックなシステムであるといえます。 ドローンの場合は制御可能な自由度（x, y, z, roll, pitch, "
"yaw）が全体の自由度と等しいのでホロノミックなシステムです。"
msgstr ""

#: ../../dronedoc/source/slam/gps_nav.rst:338
msgid "base_local_planner_params.yaml"
msgstr ""

#: ../../dronedoc/source/slam/gps_nav.rst:344
msgid "ドローンのパラメータの変更"
msgstr ""

#: ../../dronedoc/source/slam/gps_nav.rst:345
msgid ""
"二次元の自己位置推定やマッピングの精度を高めるためには、できるだけセンサを水平に保つ必要があります。 "
"ドローンのパラメータを設定してピッチ角とロール角が一定以上にならないようにしましょう。"
msgstr ""

#: ../../dronedoc/source/slam/gps_nav.rst:348
msgid ""
"また、デフォルトではGCS（Ground Control "
"Station）及びRCとの接続が切れた場合と、OFFBOARDコントロールが切れた場合に自動でホームポジションに戻るようになっているので、フェイルセーフを無効化しておきます。"
" 実機でフェイルセーフを解除する場合には十分に注意して行いましょう。"
msgstr ""

#: ../../dronedoc/source/slam/gps_nav.rst:351
msgid ""
"以下のパラメータの設定を変更します。 利用可能なパラメータ一覧は `Parameter Reference "
"<https://docs.px4.io/en/advanced_config/parameter_reference.html>`_ "
"を参照してください。"
msgstr ""

#: ../../dronedoc/source/slam/gps_nav.rst:1
msgid "パラメータ名"
msgstr ""

#: ../../dronedoc/source/slam/gps_nav.rst:1
msgid "min > max (Incr.)"
msgstr ""

#: ../../dronedoc/source/slam/gps_nav.rst:1
msgid "デフォルト"
msgstr ""

#: ../../dronedoc/source/slam/gps_nav.rst:1
msgid "単位"
msgstr ""

#: ../../dronedoc/source/slam/gps_nav.rst:1
msgid "FW_P_LIM_MAX"
msgstr ""

#: ../../dronedoc/source/slam/gps_nav.rst:1
msgid "0.0 > 60.0 (0.5)"
msgstr ""

#: ../../dronedoc/source/slam/gps_nav.rst:1
msgid "45.0"
msgstr ""

#: ../../dronedoc/source/slam/gps_nav.rst:1
msgid "deg"
msgstr ""

#: ../../dronedoc/source/slam/gps_nav.rst:1
msgid "FW_P_LIM_MIN"
msgstr ""

#: ../../dronedoc/source/slam/gps_nav.rst:1
msgid "-60.0 > 0.0 (0.5)"
msgstr ""

#: ../../dronedoc/source/slam/gps_nav.rst:1
msgid "-45.0"
msgstr ""

#: ../../dronedoc/source/slam/gps_nav.rst:1
msgid "FW_R_LIM"
msgstr ""

#: ../../dronedoc/source/slam/gps_nav.rst:1
msgid "35.0 > 65.0 (0.5)"
msgstr ""

#: ../../dronedoc/source/slam/gps_nav.rst:1
msgid "50.0"
msgstr ""

#: ../../dronedoc/source/slam/gps_nav.rst:1
msgid "NAV_DLL_ACT"
msgstr ""

#: ../../dronedoc/source/slam/gps_nav.rst:1
msgid "0 > 6"
msgstr ""

#: ../../dronedoc/source/slam/gps_nav.rst:1
msgid "0"
msgstr ""

#: ../../dronedoc/source/slam/gps_nav.rst:1
msgid "NAV_RCL_ACT"
msgstr ""

#: ../../dronedoc/source/slam/gps_nav.rst:1
msgid "2"
msgstr ""

#: ../../dronedoc/source/slam/gps_nav.rst:1
msgid "COM_OBL_ACT"
msgstr ""

#: ../../dronedoc/source/slam/gps_nav.rst:1
msgid "0 > 2"
msgstr ""

#: ../../dronedoc/source/slam/gps_nav.rst:364
msgid "パラメータを設定する方法は以下の2種類があります。"
msgstr ""

#: ../../dronedoc/source/slam/gps_nav.rst:366
#: ../../dronedoc/source/slam/gps_nav.rst:373
msgid "コマンドで設定する"
msgstr ""

#: ../../dronedoc/source/slam/gps_nav.rst:367
#: ../../dronedoc/source/slam/gps_nav.rst:401
msgid "設定ファイルを使う"
msgstr ""

#: ../../dronedoc/source/slam/gps_nav.rst:369
msgid ""
"コマンドで設定する方法は簡単ですが、毎回設定しなければなりません。 "
"設定ファイルを使う方法は準備が必要ですが、基本的に一度準備すれば毎回設定し直す必要はありません。"
msgstr ""

#: ../../dronedoc/source/slam/gps_nav.rst:374
msgid "PX4シミュレータが起動したら、以下のコマンドを実行します。 今回は試しに以下の数値を設定してみます。 数値は適宜変更してください。"
msgstr ""

#: ../../dronedoc/source/slam/gps_nav.rst:387
msgid "コマンドが成功したら次のように表示されます。 以下はFW_R_LIMの例です。"
msgstr ""

#: ../../dronedoc/source/slam/gps_nav.rst:394
msgid "パラメータの設定を行うコマンドの記法は以下のとおりです。"
msgstr ""

#: ../../dronedoc/source/slam/gps_nav.rst:402
msgid ""
"PX4シミュレーションの起動は、起動スクリプト（ ``~/.ros/etc/init.d-posix/rcS`` "
"）によって行われ、その中で設定スクリプトが読み込まれることで機体のパラメータなどが設定されます。"
msgstr ""

#: ../../dronedoc/source/slam/gps_nav.rst:404
msgid ""
"シミュレーションで使われる機体の設定スクリプトは、 ``~/.ros/etc/init.d-posix`` 以下にあり、ここからロードされます。 "
"なので、設定ファイルを作成した後にこのディレクトリに移動、もしくはシンボリックリンクを貼る必要があります。 "
"手動でファイルを移動させても良いのですが、更新したあとに移動し忘れたり、初期設定の際に移動し忘れたりする恐れがあります。 "
"そこで、今回はCMakeLists.txtを編集することでビルドしたら自動で移動してくれるようにします。"
msgstr ""

#: ../../dronedoc/source/slam/gps_nav.rst:409
msgid "この節では設定スクリプトの作成とCMakeLists.txtへの記述の追加を行います。"
msgstr ""

#: ../../dronedoc/source/slam/gps_nav.rst:411
msgid ""
"以下のような内容の設定スクリプトを ``px4_sim_pkg/posix_airframes`` 以下に、 "
"``70010_iris_2d_lidar`` という名前で保存します。 説明されていないパラメータについてはパラメータ一覧を見てください。 "
"設定スクリプトについては、 `Adding a New Airframe Configuration - PX4 Developer Guide "
"<https://dev.px4.io/en/airframes/adding_a_new_frame.html>`_ に説明があります。"
msgstr ""

#: ../../dronedoc/source/slam/gps_nav.rst:415
msgid "70010_iris_2d_lidar"
msgstr ""

#: ../../dronedoc/source/slam/gps_nav.rst:419
msgid ""
"また、以下の内容をCMakeLists.txtに追加します。 以下では、 ``add_custom_target`` を使って、 "
"``iris_2d_lidar`` という、シンボリックリンクを作成するターゲットを作成しています。"
msgstr ""

#: ../../dronedoc/source/slam/gps_nav.rst:422
msgid ""
"PX4 Firmwareがインストールされていないとエラーが出るので、PX4 "
"Firmwareがインストールされていて、シミュレーションが起動することを確認してからビルドしてください。"
msgstr ""

#: ../../dronedoc/source/slam/gps_nav.rst:432
msgid "また、mymodel_sitl.launchの以下の部分を"
msgstr ""

#: ../../dronedoc/source/slam/gps_nav.rst:442
msgid "次のように変更してください。"
msgstr ""

#: ../../dronedoc/source/slam/gps_nav.rst:454
msgid "``vehicle`` に指定された機体名と一致する設定スクリプトがPX4 SITLによって読み込まれます。"
msgstr ""

#: ../../dronedoc/source/slam/gps_nav.rst:458
msgid "Launchファイルを書く"
msgstr ""

#: ../../dronedoc/source/slam/gps_nav.rst:463
#: ../../dronedoc/source/slam/gps_nav.rst:468
msgid "navigation.launch"
msgstr ""

#: ../../dronedoc/source/slam/gps_nav.rst:464
msgid ""
"このLaunchファイルでは、コストマップ等の設定ファイルをすべて ``px4_sim_pkg/config`` "
"以下に保存していることを想定しています。"
msgstr ""

#: ../../dronedoc/source/slam/gps_nav.rst:466
msgid "以下の内容を、 ``px4_sim_pkg/launch`` 以下に、navigation.launchとして保存してください。"
msgstr ""

#: ../../dronedoc/source/slam/gps_nav.rst:500
msgid "mymodel_sitl_tf.launch"
msgstr ""

#: ../../dronedoc/source/slam/gps_nav.rst:501
msgid "最終的な mymodel_sitl_tf.launchは以下のようになります。"
msgstr ""

#: ../../dronedoc/source/slam/gps_nav.rst:527
msgid "実行してみる"
msgstr ""

#: ../../dronedoc/source/slam/gps_nav.rst:530
msgid "ビルドする"
msgstr ""

#: ../../dronedoc/source/slam/gps_nav.rst:531
msgid "オドメトリをパブリッシュするためのノードをビルドします。"
msgstr ""

#: ../../dronedoc/source/slam/gps_nav.rst:538
msgid "CMakeLists.txtに以下の内容を追加するのを忘れないようにしましょう。"
msgstr ""

#: ../../dronedoc/source/slam/gps_nav.rst:545
msgid "Pythonノードを使う場合には忘れずに実行権限を与えておきます。"
msgstr ""

#: ../../dronedoc/source/slam/gps_nav.rst:552
msgid "ノードを起動する"
msgstr ""

#: ../../dronedoc/source/slam/gps_nav.rst:553
msgid "以下のコマンドを用いてLaunchファイルを起動します。"
msgstr ""

#: ../../dronedoc/source/slam/gps_nav.rst:563
msgid "ゴールを送信する"
msgstr ""

#: ../../dronedoc/source/slam/gps_nav.rst:565
msgid "ドローンを離陸させる"
msgstr ""

#: ../../dronedoc/source/slam/gps_nav.rst:566
msgid "ゴールを送信する前にドローンを離陸させます。 シミュレーションのノードを起動しているターミナルで以下のコマンドを実行すると離陸します。"
msgstr ""

#: ../../dronedoc/source/slam/gps_nav.rst:573
msgid "ROSサービスを利用しても構いません。"
msgstr ""

#: ../../dronedoc/source/slam/gps_nav.rst:579
msgid "もしくは、mavrosの提供するノードを使って、以下のように離陸させることもできます。"
msgstr ""

#: ../../dronedoc/source/slam/gps_nav.rst:585
msgid ""
"mavrosの提供するサービスやコマンドについては `mavrosのROS Wikiページ "
"<http://wiki.ros.org/mavros>`_ に一覧があります。"
msgstr ""

#: ../../dronedoc/source/slam/gps_nav.rst:588
msgid "Rvizを使ってゴールを送信する"
msgstr ""

#: ../../dronedoc/source/slam/gps_nav.rst:589
msgid ""
"``move_base/goal`` トピックに ``move_base_msgs/MoveBaseActionGoal`` "
"型のメッセージを送ってもゴールを設定することができるのですが、Rvizを使ったほうが簡単なので今回はRvizを使用してゴールを送信します。"
msgstr ""

#: ../../dronedoc/source/slam/gps_nav.rst:591
msgid ""
"以下の画像のように、Rvizを使ってmove_baseのゴールを設定することができます。 赤枠内の2D Nav "
"Goalをクリックして選択したあとに、目標位置をクリックして決定します。 "
"クリックしたままマウスカーソルを移動させると目標位置の向きも指定することができます。"
msgstr ""

#: ../../dronedoc/source/slam/gps_nav.rst:598
msgid "Offboardモードにする"
msgstr ""

#: ../../dronedoc/source/slam/gps_nav.rst:599
msgid ""
"また、Offboardモードになっていないと ``cmd_vel_unstamped`` "
"トピックを使って操作できないので、Offboardモードにします。 以下のコマンドを使えばドローンの飛行モードがOffboardになります。 "
"``/mavros/setpoint_velocity/cmd_vel_unstamped`` "
"にトピックがパブリッシュされていないとOffboardモードに切り替わらないので、ゴールを指示してからOffboardモードにします。"
msgstr ""

#: ../../dronedoc/source/slam/gps_nav.rst:608
msgid "もしくは、先ほどと同様にmavrosのノードを使用しても構いません。"
msgstr ""

#: ../../dronedoc/source/slam/gps_nav.rst:615
msgid "実行結果"
msgstr ""

#: ../../dronedoc/source/slam/gps_nav.rst:616
msgid "上記の手順を踏んで実行した結果が以下の動画です。 ゴールを指定するとゴールに向かって飛行していることがわかります。"
msgstr ""

#: ../../dronedoc/source/slam/gps_nav.rst:621
msgid "この動画内のRvizではTF以外に、以下のトピックにパブリッシュされているメッセージを表示しています。"
msgstr ""

#: ../../dronedoc/source/slam/gps_nav.rst:623
msgid "``/move_base/current_goal``"
msgstr ""

#: ../../dronedoc/source/slam/gps_nav.rst:624
msgid "現在の目標姿勢"
msgstr ""

#: ../../dronedoc/source/slam/gps_nav.rst:625
msgid "``/move_base/local_costmap/footprint``"
msgstr ""

#: ../../dronedoc/source/slam/gps_nav.rst:626
msgid "ロボットの外形"
msgstr ""

#: ../../dronedoc/source/slam/gps_nav.rst:627
msgid "``/move_base/local_costmap/costmap``"
msgstr ""

#: ../../dronedoc/source/slam/gps_nav.rst:628
msgid "局所的コストマップ"
msgstr ""

#: ../../dronedoc/source/slam/gps_nav.rst:629
msgid "``/move_base/TrajectoryPlannerROS/local_plan``"
msgstr ""

#: ../../dronedoc/source/slam/gps_nav.rst:630
msgid "ローカルパス"
msgstr ""

#: ../../dronedoc/source/slam/gps_nav.rst:632
msgid "``/move_base/TrajectoryPlannerROS/global_plan``"
msgstr ""

#: ../../dronedoc/source/slam/gps_nav.rst:632
msgid "グローバルパス"
msgstr ""

#: ../../dronedoc/source/slam/gps_nav.rst:634
msgid "これらのメッセージは、\"Add\"ボタンで表示されるメッセージの追加ウィンドウの、\"By Topic\"タブからも追加できます。"
msgstr ""

#: ../../dronedoc/source/slam/gps_nav.rst:639
msgid "障害物回避"
msgstr ""

#: ../../dronedoc/source/slam/gps_nav.rst:640
msgid "ドローンの進路に障害物をおいた場合には迂回する経路が生成されます。"
msgstr ""

#: ../../dronedoc/source/slam/gps_nav.rst:644
msgid "この例では更に以下のメッセージをRvizで可視化しています。"
msgstr ""

#: ../../dronedoc/source/slam/gps_nav.rst:646
msgid "``/move_base/global_costmap/costmap``"
msgstr ""

#: ../../dronedoc/source/slam/gps_nav.rst:647
msgid "大域的コストマップ"
msgstr ""

#: ../../dronedoc/source/slam/gps_nav.rst:649
msgid "``/laser/scan``"
msgstr ""

#: ../../dronedoc/source/slam/gps_nav.rst:649
msgid "LiDARの計測データ"
msgstr ""

#: ../../dronedoc/source/slam/gps_nav.rst:651
msgid "この動画では、コストマップのカラースキームを、\"map\"から、\"costmap\"に変更してあります。"
msgstr ""

#: ../../dronedoc/source/slam/gps_nav.rst:655
msgid ""
"経路の障害物からの距離や、コストマップのサイズ、解像度などはコンフィグファイル内のパラメータを変更することで調節できます。 "
"また、他のパラメータについては、costmap_2dパッケージや、base_local_plannerパッケージのWikiページを参照してください。"
msgstr ""

#: ../../dronedoc/source/slam/gps_nav.rst:659
msgid "まとめ"
msgstr ""

#: ../../dronedoc/source/slam/gps_nav.rst:660
msgid ""
"お疲れ様でした。 "
"以上までで、ドローンに目標位置を指定して、障害物を考慮した経路計画を実行し、経路上を移動して目標位置まで移動させることができました。"
msgstr ""

#: ../../dronedoc/source/slam/gps_nav.rst:663
msgid "以下のページを参考にしてパラメータをチューニングしたり、別のローカルプランナーを使用してナビゲーションの性能を向上させてもよいでしょう。"
msgstr ""

#: ../../dronedoc/source/slam/gps_nav.rst:665
msgid "`costmap_2d <http://wiki.ros.org/costmap_2d>`_"
msgstr ""

#: ../../dronedoc/source/slam/gps_nav.rst:666
msgid "`base_local_planner <http://wiki.ros.org/base_local_planner>`_"
msgstr ""

#: ../../dronedoc/source/slam/gps_nav.rst:667
msgid "`global_planner <wiki.ros.org/global_planner>`_"
msgstr ""

#: ../../dronedoc/source/slam/gps_nav.rst:669
msgid ""
"別のローカルプランナー使う方法については、 :doc:`../change_local_planner/change_local_planner`"
" を参考にしてください。"
msgstr ""

#: ../../dronedoc/source/slam/gps_nav.rst:672
msgid "参考"
msgstr ""

#: ../../dronedoc/source/slam/gps_nav.rst:673
msgid "`move_base - ROS Wiki <http://wiki.ros.org/move_base>`_"
msgstr ""

#: ../../dronedoc/source/slam/gps_nav.rst:674
msgid "move_baseパッケージ"
msgstr ""

#: ../../dronedoc/source/slam/gps_nav.rst:675
msgid ""
"`Publishing Odometry Information over ROS "
"<http://wiki.ros.org/navigation/Tutorials/RobotSetup/Odom>`_"
msgstr ""

#: ../../dronedoc/source/slam/gps_nav.rst:676
msgid "オドメトリをパブリッシュするノードを書く（ROS Wiki）"
msgstr ""

#: ../../dronedoc/source/slam/gps_nav.rst:677
msgid ""
"`ROS Navigation Stack について2 ~ Odometry生成ノードの作成 ~ <http://daily-"
"tech.hatenablog.com/entry/2017/02/11/182916>`_"
msgstr ""

#: ../../dronedoc/source/slam/gps_nav.rst:678
msgid "オドメトリをパブリッシュするノードを書く"
msgstr ""

#: ../../dronedoc/source/slam/gps_nav.rst:679
msgid ""
"`How to listen to tf inside a callback loop? "
"<https://answers.ros.org/question/105171/how-to-listen-to-tf-inside-a"
"-callback-loop/>`_"
msgstr ""

#: ../../dronedoc/source/slam/gps_nav.rst:680
msgid "コールバック関数内でTFをルックアップする方法"
msgstr ""

#: ../../dronedoc/source/slam/gps_nav.rst:681
msgid ""
"`obstacle_range & raytrace_range - precise explanation? "
"<https://answers.ros.org/question/72265/obstacle_range-raytrace_range-"
"precise-explanation/>`_"
msgstr ""

#: ../../dronedoc/source/slam/gps_nav.rst:682
msgid "obstacle_rangeとraytrace_rangeの意味について"
msgstr ""

#: ../../dronedoc/source/slam/gps_nav.rst:683
msgid "`costmap_2d - ROS Wiki <http://wiki.ros.org/costmap_2d#Map_Types>`_"
msgstr ""

#: ../../dronedoc/source/slam/gps_nav.rst:684
msgid "static_mapパラメータとrolling_windowパラメータについて"
msgstr ""

